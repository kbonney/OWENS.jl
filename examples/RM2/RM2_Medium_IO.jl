import OWENS
import YAML
import OrderedCollections
using Test
import HDF5

runpath = splitdir(@__FILE__)[1]

OWENS_Options = "$runpath/modeling_options_OWENS_RM2.yml"

WINDIO_filename = "$runpath/WINDIO_RM2.yaml"

OWENS.runOWENSWINDIO(OWENS_Options,WINDIO_filename,runpath)


file = "./InitialDataOutputs_windio.h5"
t_windio = HDF5.h5read(file,"t")
aziHist_windio = HDF5.h5read(file,"aziHist")
OmegaHist_windio = HDF5.h5read(file,"OmegaHist")
OmegaDotHist_windio = HDF5.h5read(file,"OmegaDotHist")
gbHist_windio = HDF5.h5read(file,"gbHist")
gbDotHist_windio = HDF5.h5read(file,"gbDotHist")
gbDotDotHist_windio = HDF5.h5read(file,"gbDotDotHist")
FReactionHist_windio = HDF5.h5read(file,"FReactionHist")
FTwrBsHist_windio = HDF5.h5read(file,"FTwrBsHist")
genTorque_windio = HDF5.h5read(file,"genTorque")
genPower_windio = HDF5.h5read(file,"genPower")
torqueDriveShaft_windio = HDF5.h5read(file,"torqueDriveShaft")
uHist_windio = HDF5.h5read(file,"uHist")
uHist_prp_windio = HDF5.h5read(file,"uHist_prp")
epsilon_x_hist_windio = HDF5.h5read(file,"epsilon_x_hist")
epsilon_y_hist_windio = HDF5.h5read(file,"epsilon_y_hist") 
epsilon_z_hist_windio = HDF5.h5read(file,"epsilon_z_hist")
kappa_x_hist_windio = HDF5.h5read(file,"kappa_x_hist")
kappa_y_hist_windio = HDF5.h5read(file,"kappa_y_hist")
kappa_z_hist_windio = HDF5.h5read(file,"kappa_z_hist") 
massOwens_windio = HDF5.h5read(file,"massOwens")
stress_U_windio = HDF5.h5read(file,"stress_U")
SF_ult_U_windio = HDF5.h5read(file,"SF_ult_U")
SF_buck_U_windio = HDF5.h5read(file,"SF_buck_U")
stress_L_windio = HDF5.h5read(file,"stress_L")
SF_ult_L_windio = HDF5.h5read(file,"SF_ult_L")
SF_buck_L_windio = HDF5.h5read(file,"SF_buck_L")
stress_TU_windio = HDF5.h5read(file,"stress_TU")
SF_ult_TU_windio = HDF5.h5read(file,"SF_ult_TU")
SF_buck_TU_windio = HDF5.h5read(file,"SF_buck_TU")
stress_TL_windio = HDF5.h5read(file,"stress_TL")
SF_ult_TL_windio = HDF5.h5read(file,"SF_ult_TL")
SF_buck_TL_windio = HDF5.h5read(file,"SF_buck_TL")
topstrainout_blade_U_windio = HDF5.h5read(file,"topstrainout_blade_U")
topstrainout_blade_L_windio = HDF5.h5read(file,"topstrainout_blade_L")
topstrainout_tower_U_windio = HDF5.h5read(file,"topstrainout_tower_U")
topstrainout_tower_L_windio = HDF5.h5read(file,"topstrainout_tower_L")
topDamage_blade_U_windio = HDF5.h5read(file,"topDamage_blade_U")
topDamage_blade_L_windio = HDF5.h5read(file,"topDamage_blade_L")
topDamage_tower_U_windio = HDF5.h5read(file,"topDamage_tower_U")
topDamage_tower_L_windio = HDF5.h5read(file,"topDamage_tower_L")


file = "./InitialDataOutputs_scripting.h5"
t = HDF5.h5read(file,"t")
aziHist = HDF5.h5read(file,"aziHist")
OmegaHist = HDF5.h5read(file,"OmegaHist")
OmegaDotHist = HDF5.h5read(file,"OmegaDotHist")
gbHist = HDF5.h5read(file,"gbHist")
gbDotHist = HDF5.h5read(file,"gbDotHist")
gbDotDotHist = HDF5.h5read(file,"gbDotDotHist")
FReactionHist = HDF5.h5read(file,"FReactionHist")
FTwrBsHist = HDF5.h5read(file,"FTwrBsHist")
genTorque = HDF5.h5read(file,"genTorque")
genPower = HDF5.h5read(file,"genPower")
torqueDriveShaft = HDF5.h5read(file,"torqueDriveShaft")
uHist = HDF5.h5read(file,"uHist")
uHist_prp = HDF5.h5read(file,"uHist_prp")
epsilon_x_hist = HDF5.h5read(file,"epsilon_x_hist")
epsilon_y_hist = HDF5.h5read(file,"epsilon_y_hist")  
epsilon_z_hist = HDF5.h5read(file,"epsilon_z_hist")
kappa_x_hist = HDF5.h5read(file,"kappa_x_hist")
kappa_y_hist = HDF5.h5read(file,"kappa_y_hist")
kappa_z_hist = HDF5.h5read(file,"kappa_z_hist") 
massOwens = HDF5.h5read(file,"massOwens")
stress_U = HDF5.h5read(file,"stress_U")
SF_ult_U = HDF5.h5read(file,"SF_ult_U")
SF_buck_U = HDF5.h5read(file,"SF_buck_U")
stress_L = HDF5.h5read(file,"stress_L")
SF_ult_L = HDF5.h5read(file,"SF_ult_L")
SF_buck_L = HDF5.h5read(file,"SF_buck_L")
stress_TU = HDF5.h5read(file,"stress_TU")
SF_ult_TU = HDF5.h5read(file,"SF_ult_TU")
SF_buck_TU = HDF5.h5read(file,"SF_buck_TU")
stress_TL = HDF5.h5read(file,"stress_TL")
SF_ult_TL = HDF5.h5read(file,"SF_ult_TL")
SF_buck_TL = HDF5.h5read(file,"SF_buck_TL")
topstrainout_blade_U = HDF5.h5read(file,"topstrainout_blade_U")
topstrainout_blade_L = HDF5.h5read(file,"topstrainout_blade_L")
topstrainout_tower_U = HDF5.h5read(file,"topstrainout_tower_U")
topstrainout_tower_L = HDF5.h5read(file,"topstrainout_tower_L")
topDamage_blade_U = HDF5.h5read(file,"topDamage_blade_U")
topDamage_blade_L = HDF5.h5read(file,"topDamage_blade_L")
topDamage_tower_U = HDF5.h5read(file,"topDamage_tower_U")
topDamage_tower_L = HDF5.h5read(file,"topDamage_tower_L")

import PyPlot
PyPlot.pygui(true)
PyPlot.figure()
PyPlot.plot(t_windio,FReactionHist_windio[:,6])
PyPlot.plot(t,FReactionHist[:,6])

frac = 1e-5
@test isapprox(t_windio,t;atol=maximum(abs.(t_windio))*frac)
@test isapprox(aziHist_windio,aziHist;atol=maximum(abs.(aziHist_windio))*frac)
@test isapprox(OmegaHist_windio,OmegaHist;atol=maximum(abs.(OmegaHist_windio))*frac)
@test isapprox(OmegaDotHist_windio,OmegaDotHist;atol=maximum(abs.(OmegaDotHist_windio))*frac)
@test isapprox(gbHist_windio,gbHist;atol=maximum(abs.(gbHist_windio))*frac)
@test isapprox(gbDotHist_windio,gbDotHist;atol=maximum(abs.(gbDotHist_windio))*frac)
@test isapprox(gbDotDotHist_windio,gbDotDotHist;atol=maximum(abs.(gbDotDotHist_windio))*frac)
@test isapprox(FReactionHist_windio,FReactionHist;atol=maximum(abs.(FReactionHist_windio))*frac)
@test isapprox(FTwrBsHist_windio,FTwrBsHist;atol=maximum(abs.(FTwrBsHist_windio))*frac)
@test isapprox(genTorque_windio,genTorque;atol=maximum(abs.(genTorque_windio))*frac)
@test isapprox(genPower_windio,genPower;atol=maximum(abs.(genPower_windio))*frac)
@test isapprox(torqueDriveShaft_windio,torqueDriveShaft;atol=maximum(abs.(torqueDriveShaft_windio))*frac)
@test isapprox(uHist_windio,uHist;atol=maximum(abs.(uHist_windio))*frac)
@test isapprox(uHist_prp_windio,uHist_prp;atol=maximum(abs.(uHist_prp_windio))*frac)
@test isapprox(epsilon_x_hist_windio,epsilon_x_hist;atol=maximum(abs.(epsilon_x_hist_windio))*frac)
@test isapprox(epsilon_y_hist_windio,epsilon_y_hist;atol=maximum(abs.(epsilon_y_hist_windio))*frac)
@test isapprox(epsilon_z_hist_windio,epsilon_z_hist;atol=maximum(abs.(epsilon_z_hist_windio))*frac)
@test isapprox(kappa_x_hist_windio,kappa_x_hist;atol=maximum(abs.(kappa_x_hist_windio))*frac)
@test isapprox(kappa_y_hist_windio,kappa_y_hist;atol=maximum(abs.(kappa_y_hist_windio))*frac)
@test isapprox(kappa_z_hist_windio,kappa_z_hist;atol=maximum(abs.(kappa_z_hist_windio))*frac)
@test isapprox(massOwens_windio,massOwens;atol=maximum(abs.(massOwens_windio))*frac)
ipass = 0
for i = 1:length(stress_U_windio)
    # println("$i of $(length(stress_U_windio))")
    if isapprox(stress_U_windio[i],stress_U[i];atol=maximum(abs.(stress_U_windio[i]))*frac)
        global ipass += 1
    end
end
println("Percent Stress Pass: $(ipass/length(stress_U_windio)*100)%")
@test isapprox(SF_ult_U_windio,SF_ult_U;atol=maximum(abs.(SF_ult_U_windio))*frac)
@test isapprox(SF_buck_U_windio,SF_buck_U;atol=maximum(abs.(SF_buck_U_windio))*frac)
@test isapprox(stress_L_windio,stress_L;atol=maximum(abs.(stress_L_windio))*frac)
@test isapprox(SF_ult_L_windio,SF_ult_L;atol=maximum(abs.(SF_ult_L_windio))*frac)
@test isapprox(SF_buck_L_windio,SF_buck_L;atol=maximum(abs.(SF_buck_L_windio))*frac)
@test isapprox(stress_TU_windio,stress_TU;atol=maximum(abs.(stress_TU_windio))*frac)
@test isapprox(SF_ult_TU_windio,SF_ult_TU;atol=maximum(abs.(SF_ult_TU_windio))*frac)
@test isapprox(SF_buck_TU_windio,SF_buck_TU;atol=maximum(abs.(SF_buck_TU_windio))*frac)
@test isapprox(stress_TL_windio,stress_TL;atol=maximum(abs.(stress_TL_windio))*frac)
@test isapprox(SF_ult_TL_windio,SF_ult_TL;atol=maximum(abs.(SF_ult_TL_windio))*frac)
@test isapprox(SF_buck_TL_windio,SF_buck_TL;atol=maximum(abs.(SF_buck_TL_windio))*frac)
@test isapprox(topstrainout_blade_U_windio,topstrainout_blade_U;atol=maximum(abs.(topstrainout_blade_U_windio))*frac)
@test isapprox(topstrainout_blade_L_windio,topstrainout_blade_L;atol=maximum(abs.(topstrainout_blade_L_windio))*frac)
@test isapprox(topstrainout_tower_U_windio,topstrainout_tower_U;atol=maximum(abs.(topstrainout_tower_U_windio))*frac)
@test isapprox(topstrainout_tower_L_windio,topstrainout_tower_L;atol=maximum(abs.(topstrainout_tower_L_windio))*frac)
@test isapprox(topDamage_blade_U_windio,topDamage_blade_U;atol=maximum(abs.(topDamage_blade_U_windio))*frac)
@test isapprox(topDamage_blade_L_windio,topDamage_blade_L;atol=maximum(abs.(topDamage_blade_L_windio))*frac)
@test isapprox(topDamage_tower_U_windio,topDamage_tower_U;atol=maximum(abs.(topDamage_tower_U_windio))*frac)
@test isapprox(topDamage_tower_L_windio,topDamage_tower_L;atol=maximum(abs.(topDamage_tower_L_windio))*frac)